--- name:default
root: 'ur10::base'
tip: 'ur10::wrist_3'

# If a singular value is smaller than this, the damping term will be activated. If you want damping in wider range of configurations, increase this value.
epsilon: 1.0e-05
# If true, the input twist is assumed to be in tip coordinates, otherwise in root coordinates. Note that the center of rotation will always assumed to be equal to the chosen reference frame. E.g. if the tip is chosen as reference frame, not only the rotational and translational velocity will be expressed in tip coordinates, but also the the center of rotation will be equal to the center of tip frame
input_in_tip_coordinates: false
# Damping term. Reduces the output velocity in singular configurations. This value, and epsilon, should be chosen with extreme care. Depends on kinematic structure of the robot. Reasonable value for aila's right arm was 0.1
lambda: 0.1
# Filename or text representation of the robot model
# 
# By default, it is interpreted as a path to a URDF file. If it starts with
# an XML tag, it is interpreted instead as a XML text.
# 
# Whether it is a URDF or SDF model is controlled by the robot_model_format
# property
robot_model: ''
# In which format is robot_model
# 
# Set to ROBOT_MODEL_URDF for URDF and ROBOT_MODEL_SDF for SDF.
robot_model_format: :ROBOT_MODEL_URDF
# Root frame of the kinematic chain. Has to be a link in the given urdf model.
root: 'ur10::base'
# Tip frame of the kinematic chain. Has to be a link in the given urdf model.
tip: 'ur10::wrist_3'
# DEPRECATED use robot_model and robot_model_format instead
urdf_file: ''
# Weights in task space in the range 0 ... 1. Size has to be same as number of joints in kinematic chain. Zero weight means that the corresponding joint will not be used at all. If not set, all weights are set by default to 1.
weights_js:
  data: []
# Weights in task space in the range 0 ... 1. Size has to be 6. Zero weight means that the corresponding task space direction will not be used at all. If not set, all values are set by default to 1.
weights_ts:
  data: []

